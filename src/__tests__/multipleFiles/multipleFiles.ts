import { readFileSync } from 'fs';

import { convert } from '../../index';
import { removeFilesByPattern } from '../../utils';
import path from 'path';

const basePath = path.join(__dirname, 'schemas');

describe('can files reference interfaces between schema files', () => {
  beforeEach(() => {
    removeFilesByPattern(`${basePath}/*.type.ts`);
  });

  test('multipleFiles', async () => {
    const result = await convert({
      schemaFile: `${basePath}/*.ts`
    });

    expect(result).toBe(true);

    const oneContent = readFileSync(`${basePath}/One.type.ts`).toString();

    expect(oneContent).toBe(
      `/**
 * This file was automatically generated by joi-to-typescript
 * Do not modify this file manually
 */

import { Person } from '.';

export interface Item {
  /**
   * Female Zebra
   */
  femaleZebra?: Zebra;
  /**
   * Male Zebra
   */
  maleZebra?: Zebra;
  name: string;
}

/**
 * A list of People
 */
export type People = Person[];

/**
 * a test schema definition
 */
export interface Test {
  name?: string;
  /**
   * A list of People
   */
  people?: People;
  propertyName1: boolean;
}

export interface Zebra {
  name?: string;
}
`
    );
  });
});
